mixin initialField(field, submitted)
	if field.type == 'text'
		+initialField_text(field, submitted)
	else if field.type == 'textarea'
		+initialField_textarea(field, submitted)
	else if field.type == 'key'
		+initialField_key(field, submitted)
	else if field.type == 'email'
		+initialField_email(field, submitted)
	else if field.type == 'url'
		+initialField_url(field, submitted)
	else if field.type == 'password'
		+initialField_password(field, submitted)
	else if field.type == 'name'
		+initialField_name(field, submitted)
	else if field.type == 'date'
		+initialField_date(field, submitted)
	else if field.type == 'datetime'
		+initialField_datetime(field, submitted)
	else if field.type == 'number'
		+initialField_number(field, submitted)
	else if field.type == 'money'
		+initialField_money(field, submitted)
	else if field.type == 'boolean'
		+initialField_boolean(field, submitted)
	else if field.type == 'select'
		+initialField_select(field, submitted)
	else if field.type == 'relationship'
		+initialField_relationship(field, submitted)

mixin initialField_text_common(type, field, submitted, cls)
	.field.row(class='type-' + type)
		.col-sm-3.col-md-2: label.field-label= field.label
		.col-sm-8.col-md-6
			.field-ui: input(type='text', name=field.path, class=[cls,'width-' + field.width], autocomplete='off', value=submitted[field.path]).form-control
			if field.note
				.field-note= field.note

mixin initialField_text(field, submitted)
	+initialField_text_common('text', field, submitted)

mixin initialField_key(field, submitted)
	+initialField_text_common('key', field, submitted, 'code')

mixin initialField_email(field, submitted)
	+initialField_text_common('email', field, submitted, 'code')

mixin initialField_url(field, submitted)
	+initialField_text_common('url', field, submitted, 'code')

mixin initialField_textarea(field, submitted)
	.field.type-textarea
		.field-label= field.label
		.field-ui: textarea(name=field.path, class='width-' + field.width, autocomplete='off')= submitted[field.path]
		if field.note
			.field-note= field.note

mixin initialField_password(field, submitted)
	.field.type-password.row
		.col-sm-3.col-md-2: label.field-label= field.label
		.col-sm-8.col-md-6
			.field-ui: .form-row
				.col-sm-6: input(type='password', name=field.path, class='width-short', autocomplete='off', value=submitted[field.path], placeholder='Set password').form-control
				.col-sm-6: input(type='password', name=field.paths.confirm, class='width-short', autocomplete='off', value=submitted[field.paths.confirm], placeholder='Confirm password').form-control
			if field.note
				.field-note= field.note

mixin initialField_name(field, submitted)
	.field.type-text
		.field-label= field.label
		.field-ui
			input(type='text', name=field.paths.first, class='width-short', autocomplete='off', placeholder='first', value=submitted[field.paths.first]).form-control
			input(type='text', name=field.paths.last, class='width-short', autocomplete='off', placeholder='last', value=submitted[field.paths.last]).form-control
		if field.note
			.field-note= field.note

mixin initialField_date(field, submitted)
	+initialField_text_common('date', field, submitted, 'ui-datepicker')

mixin initialField_datetime(field, submitted)
	+initialField_text_common('datetime', field, submitted)

mixin initialField_number(field, submitted)
	+initialField_text_common('number', field, submitted)

mixin initialField_money(field, submitted)
	+initialField_text_common('money', field, submitted)

mixin initialField_boolean(field, submitted)
	.field.type-boolean
		label(for=field.path)
			input(type='checkbox', name=field.path, id=field.path, value='true', checked=(submitted[field.path] == 'true'))
			= field.label
		if field.note
			.field-note= field.note

mixin initialField_select(field, submitted)
	.field.type-select
		.field-label= field.label
		.field-ui: select(name=field.path).ui-select2
			option(value='')
			each opt in field.ops
				option(value=opt.value, selected=(submitted[field.path] == opt.value))= opt.label
		if field.note
			.field-note= field.note

mixin initialField_relationship(field, submitted)
	- var refList = field.refList
	.field.type-object.row
		.col-sm-3.col-md-2: label.field-label= field.label
		.col-sm-8.col-md-6
			.field-ui
				input(type='hidden', name=field.path, id='field_' + field.path, value=submitted[field.path], class='width-medium ui-select2-ref', data-ref-path=refList.path, data-ref-singular=refList.singular, data-ref-plural=refList.plural)
			if field.note
				.field-note= field.note

