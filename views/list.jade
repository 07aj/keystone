extends layout/base

include mixins/initialFields
include mixins/columns

block page-js
	script(src='/keystone/js/views/list.js')
	script.
		Keystone.list = { path: "#{list.path}" };

block content
	h1= utils.plural(items.total, '* ' + list.singular, '* ' + list.plural)
		if search
			small matching #{search}
		if items.totalPages > 1
			small (showing #{items.first} to #{items.last})
	
	.search-list
		form(action='/keystone/' + list.path)
			input(type='text', name='search', value=search)
			button.btn Search
	
	if (!list.get('nocreate'))
		.create-item
			form(method='post', action='/keystone/' + list.path)
				input(type='hidden', name='action', value='create')
				
				.form
					if list.nameIsInitial
						if list.nameField.type == 'name'
							h2.item-name: input(type='text', name=list.nameField.paths.full, value=submitted[list.nameField.paths.full])
						else if list.nameField.type == 'text'
							h2.item-name: input(type='text', name=list.nameField.path, value=submitted[list.nameField.path])
						else
							.alert.alert-error Unsupported field type (#{list.nameField.type}) for item name (#{list.nameField.path}).
					
					each field in list.initialFields
						+initialField(field, submitted)
				
				.toolbar
					.toolbar-create
						button(type='submit').btn Create
						a(href=js).btn.btn-cancel.btn-cancel-create-item cancel
					.toolbar-default
						a(href=js, class=(showCreateForm ? 'autoclick' : null)).btn.btn-create-item Create #{list.singular}
			
	if items.results.length
		- var sortable = list.get('sortable') && !list.get('sortContext')
		- var firstColspan = 1;
		table(cellpadding=0, cellspacing=0, class=sortable ? 'sortable' : false, data-list-path=list.path).items-list
			if !list.get('nodelete')
				- firstColspan++;
				col(width=26)
			if sortable
				- firstColspan++;
				col(width=26)
			each col in columns
				col(width=col.width)
			thead
				tr
					each col, i in columns
						th(colspan=i == 0 && firstColspan > 1 ? firstColspan : false)= col.label
			tbody
				each item in items.results
					tr(id=item.id)
						if !list.get('nodelete')
							td.control: a(href='/keystone/' + list.path + '?delete=' + item.id, data-confirm='Are you sure you want to delete this ' + list.singular.toLowerCase() + '?').control-delete
						if sortable
							td.control: a(href=js).control-sort
						each col, i in columns
							td
								+column(list, col, item)
								
		if items.totalPages > 1
			- var basePath = '/keystone/' + list.path
			.pagination
				ul
					li(class=items.previous ? false : 'disabled')
						a(href=items.previous ? basePath + '/' + items.previous : false) &laquo; Prev
					each p, i in items.pages
						li(class=items.currentPage == p ? 'disabled' : false)
							a(href=(p == '...' ? basePath + '/' + (i ? items.totalPages : 1) : basePath + '/' + p))= p
					li(class=items.next ? false : 'disabled')
						a(href=items.next ? basePath + '/' + items.next : false) Next &raquo;
		
	else
		p.no-results No #{list.plural} found.
	