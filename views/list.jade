extends layout/base

include mixins/initialFields
include mixins/columns

block page-js
	script(src='/keystone/js/views/list.js')
	script.
		Keystone.list = { path: "#{list.path}" };

block intro
	- var basePath = '/keystone/' + list.path
	.page-header.list-header
		h1
			if items.results.length
				span= utils.plural(items.total, '* ' + list.singular, '* ' + list.plural)
			else
				span No #{list.plural.toLowerCase()} found
					= search ? '' : '.'
			if search
				span.text-muted  matching  
				span=search
			if items.results.length
				span.text-muted  ordered by  
				span.dropdown.list-sort-dropdown
					a(href=js, data-toggle='dropdown').dropdown-toggle
						| name&nbsp;(asc)&nbsp;
						b.caret
					ul.dropdown-menu: each col, i in columns
						li.selected: a(href=js) 
							unless i
								span.glyphicon.glyphicon-ok.pull-right
							span=col.label
		if items.totalPages > 1
			.list-pagination
				.count Showing #{items.first} to #{items.last}
				ul.pagination: each p, i in items.pages
					li(class=items.currentPage == p ? 'active' : null)
						a(href=(p == '...' ? basePath + '/' + (i ? items.totalPages : 1) : basePath + '/' + p))= p
		if items.results.length || search
			.list-toolbar.form-row
				.col-sm-6: .search-list
					form(action='/keystone/' + list.path).form-row
						.col-xs-10.col-sm-9.col-md-10.search-field
							input(type='text', name='search', placeholder='Search ' + list.plural.toLowerCase(), value=search).form-control
							if search
								a(href='/keystone/#{list.path}').search-list-clear &times;
						.col-xs-2.col-sm-3.col-md-2.search-button: button(type='submit').btn.btn-default.btn-search.btn-block
							span.visible-xs Go
							span.hidden-xs Search
				.col-xs-4.col-sm-2
					.dropdown.list-filter-dropdown
						a(href=js, data-toggle='dropdown').btn.btn-default.dropdown-toggle More filters
						ul.dropdown-menu
							li: a(href=js) Name
							li: a(href=js) Is Style
							li: a(href=js) Style is Featured
				.col-xs-8.col-sm-4.text-right
					button.btn.btn-default Columns
					button.btn.btn-default Export
				
block content
	if (!list.get('nocreate'))
		.create-item
			form(method='post', action='/keystone/' + list.path)
				input(type='hidden', name='action', value='create')
				
				.form
					if list.nameIsInitial
						if list.nameField.type == 'name'
							.field.item-name: input(type='text', name=list.nameField.paths.full, value=submitted[list.nameField.paths.full], placeholder=list.singular + ' name').form-control.input-lg
						else if list.nameField.type == 'text'
							.field.item-name: input(type='text', name=list.nameField.path, value=submitted[list.nameField.path], placeholder=list.singular + ' name').form-control.input-lg
						else
							.alert.alert-danger Unsupported field type (#{list.nameField.type}) for item name (#{list.nameField.path}).
					
					each field in list.initialFields
						+initialField(field, submitted)
				
				.toolbar
					.toolbar-create
						button(type='submit').btn.btn-default.btn-create Create
						a(href=js).btn.btn-link.btn-cancel.btn-cancel-create-item cancel
					.toolbar-default
						a(href=js, class=(showCreateForm ? 'autoclick' : null)).btn.btn-default.btn-create.btn-create-item Create #{list.singular}
			
	if items.results.length
		- var sortable = list.get('sortable') && !list.get('sortContext')
		- var firstColspan = 1;
		table(cellpadding=0, cellspacing=0, class=sortable ? 'sortable' : false, data-list-path=list.path).table.table-striped.items-list
			if !list.get('nodelete')
				- firstColspan++;
				col(width=26)
			if sortable
				- firstColspan++;
				col(width=26)
			each col in columns
				col(width=col.width)
			thead
				tr
					each col, i in columns
						th(colspan=i == 0 && firstColspan > 1 ? firstColspan : false)= col.label
			tbody
				each item in items.results
					tr(id=item.id)
						if !list.get('nodelete')
							td.control: a(href='/keystone/' + list.path + '?delete=' + item.id, data-confirm='Are you sure you want to delete this ' + list.singular.toLowerCase() + '?').control-delete
						if sortable
							td.control: a(href=js).control-sort
						each col, i in columns
							td
								+column(list, col, item)
								
		if items.totalPages > 1
			.list-pagination
				.count Showing #{items.first} to #{items.last}
				ul.pagination: each p, i in items.pages
					li(class=items.currentPage == p ? 'active' : null)
						a(href=(p == '...' ? basePath + '/' + (i ? items.totalPages : 1) : basePath + '/' + p))= p
	
